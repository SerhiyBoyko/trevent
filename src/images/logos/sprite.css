/*
Icon classes can be used entirely standalone. They are named after their original file names.

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.icon-elektronik-h {
  background-image: url(sprite.png);
  background-position: 0px 0px;
  width: 225px;
  height: 83px;
}
.icon-elektronik {
  background-image: url(sprite.png);
  background-position: 0px -83px;
  width: 224px;
  height: 83px;
}
.icon-kermi-h {
  background-image: url(sprite.png);
  background-position: -225px 0px;
  width: 211px;
  height: 83px;
}
.icon-kermi {
  background-image: url(sprite.png);
  background-position: -225px -83px;
  width: 211px;
  height: 83px;
}
.icon-reflex-h {
  background-image: url(sprite.png);
  background-position: 0px -166px;
  width: 159px;
  height: 94px;
}
.icon-reflex {
  background-image: url(sprite.png);
  background-position: -159px -166px;
  width: 159px;
  height: 94px;
}
.icon-remak-h {
  background-image: url(sprite.png);
  background-position: 0px -260px;
  width: 224px;
  height: 36px;
}
.icon-remak {
  background-image: url(sprite.png);
  background-position: 0px -296px;
  width: 224px;
  height: 36px;
}
